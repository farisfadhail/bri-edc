// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package injector

import (
	"bri-edc/api/config"
	"bri-edc/api/internal/handler"
	"bri-edc/api/internal/repositories"
	"bri-edc/api/internal/services"
	"gorm.io/gorm"
)

// Injectors from app_injector.go:

func InitializeApp() (*AppContainer, error) {
	db := config.ConnectGormDB()
	transactionRepository := repositories.NewTransactionRepository(db)
	merchantRepository := repositories.NewMerchantRepository(db)
	terminalRepository := repositories.NewTerminalRepository(db)
	transactionService := services.NewTransactionService(db, transactionRepository, merchantRepository, terminalRepository)
	transactionHandler := handler.NewTransactionHandler(transactionService)
	appContainer, err := NewAppContainer(db, transactionHandler)
	if err != nil {
		return nil, err
	}
	return appContainer, nil
}

// app_injector.go:

type AppContainer struct {
	DB *gorm.DB
	//
	TransactionHandler *handler.TransactionHandler
}

func NewAppContainer(
	db *gorm.DB,

	transactionHandler *handler.TransactionHandler,
) (*AppContainer, error) {
	return &AppContainer{
		DB: db,

		TransactionHandler: transactionHandler,
	}, nil
}
